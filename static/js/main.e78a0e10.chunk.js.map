{"version":3,"sources":["components/CityWeather.js","components/Signature.js","db/cities.js","components/Home.js","components/App.js","reportWebVitals.js","index.js"],"names":["CityWeather","city","temp","text","deleteCity","useState","cross","setCross","className","onMouseOver","onMouseOut","onClick","style","color","Signature","href","target","cities","Home","citiesArray","setCities","setText","back","setBack","addCity","newText","find","x","toUpperCase","oldCities","filter","item","onChange","event","value","onKeyDown","key","type","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yTAyBeA,MApBf,YAAwD,IAAjCC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,WAAc,EAC5BC,oBAAS,GADmB,mBAC/CC,EAD+C,KACxCC,EADwC,KAGtD,OACC,sBAAKC,UAAU,cAAf,UACC,qBACCA,UAAU,oBACVC,YAAa,kBAAMF,GAAUD,IAC7BI,WAAY,kBAAMH,GAAUD,IAC5BK,QAAS,kBAAMP,EAAWH,IAJ3B,SAKEK,EAAQ,cAAC,IAAD,IAAgB,cAAC,IAAD,CAAWM,MAAO,CAAEC,MAAO,eAErD,6BAAKZ,IACL,+BAAKC,EAAL,WACA,4BAAIC,Q,MCFQW,MAdf,WACC,OACC,qBAAKN,UAAU,YAAf,SACC,oCACI,mBACFO,KAAK,kCACLC,OAAO,SACPR,UAAU,kBAHR,iC,iBCOQS,EAdA,CACd,CACChB,KAAM,SACNC,KAAM,GACNC,KAAM,SAEP,CACCF,KAAM,aACNC,KAAM,GACNC,KAAM,UC+DOe,MAjEf,WAAiB,IAAD,EACab,mBAASc,GADtB,mBACRF,EADQ,KACAG,EADA,OAESf,mBAAS,IAFlB,mBAERF,EAFQ,KAEFkB,EAFE,OAGShB,oBAAS,GAHlB,mBAGRiB,EAHQ,KAGFC,EAHE,KAKTC,EAAU,WAAqB,IAApBC,EAAmB,uDAATtB,EACX,IAAXsB,GAAkBR,EAAOS,MAAK,SAACC,GAAD,OAAQA,EAAE1B,KAAM2B,gBAAkBzB,EAAKyB,kBACxER,GAAU,SAAAS,GAAS,4BAAQA,GAAR,CAAmB,CAAE5B,KAAMwB,EAASvB,KAAM,EAAGC,KAAM,cAEvEkB,EAAQ,KAGHjB,EAAa,SAACH,GACnBmB,EAAUH,EAAOa,QAAO,SAAAC,GAAI,OAAIA,EAAK9B,OAASA,OAgB/C,OACC,sBAAKO,UAAU,OAAf,UAEC,6CACA,sBAAKA,UAAU,gBAAf,UACC,uBACCA,UAAU,cACVwB,SAAU,SAACC,GAAD,OAAWZ,EAAQY,EAAMjB,OAAOkB,QAC1CA,MAAO/B,EACPgC,UArBgB,SAACF,GACF,UAAdA,EAAMG,KACTZ,KAoBEa,KAAK,SACN,wBAAQ1B,QAAS,kBAAMa,EAAQrB,IAA/B,oBAGD,qBACCK,UAAU,gBACVC,YAAa,kBAAMc,GAASD,IAC5BZ,WAAY,kBAAMa,GAASD,IAC3BX,QAxBmB,WACrBS,EAAUD,GACVE,EAAQ,KAkBP,SAKEC,EAAO,cAAC,IAAD,CAA2BV,MAAO,CAAEC,MAAO,aAAkB,cAAC,IAAD,CAA2BD,MAAO,CAAEC,MAAO,eAEjH,qBAAKL,UAAU,gBAAf,SACES,EAAOqB,KAAI,SAACX,GAAD,OACX,cAAC,EAAD,CACC1B,KAAM0B,EAAE1B,KACRC,KAAMyB,EAAEzB,KACRC,KAAMwB,EAAExB,KACRC,WAAYA,SAGf,cAAC,EAAD,QCtDYmC,MARf,WACE,OACE,qBAAK/B,UAAU,MAAf,SACE,cAAC,EAAD,OCKSgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e78a0e10.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport '../styles/CityWeather.css';\nimport CloseIcon from '@material-ui/icons/Close';\n\n\nfunction CityWeather({ city, temp, text, deleteCity }) {\n const [cross, setCross] = useState(true);\n\n return (\n  <div className='cityweather'>\n   <div\n    className=\"cityweater__close\"\n    onMouseOver={() => setCross(!cross)}\n    onMouseOut={() => setCross(!cross)}\n    onClick={() => deleteCity(city)} >\n    {cross ? <CloseIcon /> : <CloseIcon style={{ color: '#B53737' }} />}\n   </div>\n   <h1>{city}</h1>\n   <h4>{temp}ÂºC</h4>\n   <t>{text}</t>\n\n  </div>\n )\n}\n\nexport default CityWeather\n","import React from 'react';\nimport '../styles/Signature.css';\n\nfunction Signature() {\n return (\n  <div className=\"signature\">\n   <p>\n    by <a\n     href=\"https://github.com/serranopablo\"\n     target=\"_blank\"\n     className=\"signature__link\"\n    >Pablo Serrano</a>\n   </p>\n  </div>\n )\n}\n\nexport default Signature\n","const cities = [\n {\n  city: \"London\",\n  temp: 15,\n  text: \"Rainy\"\n },\n {\n  city: \"Fuengirola\",\n  temp: 28,\n  text: \"Sunny\"\n },\n\n]\n\nexport default cities;","import React, { useState } from 'react';\nimport '../styles/Home.css';\nimport CityWeather from './CityWeather.js';\nimport Signature from './Signature.js';\nimport SettingsBackupRestoreIcon from '@material-ui/icons/SettingsBackupRestore';\nimport citiesArray from '../db/cities';\n\nfunction Home() {\n const [cities, setCities] = useState(citiesArray);\n const [text, setText] = useState('');\n const [back, setBack] = useState(true);\n\n const addCity = (newText = text) => {\n  if (newText != '' && !cities.find((x) => (x.city).toUpperCase() === text.toUpperCase())) {\n   setCities(oldCities => [...oldCities, { city: newText, temp: 1, text: \"Snowy\" }]);\n  }\n  setText('');\n\n }\n const deleteCity = (city) => {\n  setCities(cities.filter(item => item.city !== city));\n }\n\n\n const handleEnter = (event) => {\n  if (event.key === 'Enter') {\n   addCity();\n  }\n }\n\n const restartArrays = () => {\n  setCities(citiesArray);\n  setText('');\n }\n\n\n return (\n  <div className=\"home\">\n\n   <h1>Weather App</h1>\n   <div className=\"home__addTask\">\n    <input\n     className=\"home__input\"\n     onChange={(event) => setText(event.target.value)}\n     value={text}\n     onKeyDown={handleEnter}\n     type=\"text\" />\n    <button onClick={() => addCity(text)}>Add</button>\n   </div>\n\n   <div\n    className=\"home__restart\"\n    onMouseOver={() => setBack(!back)}\n    onMouseOut={() => setBack(!back)}\n    onClick={restartArrays}>\n    {back ? <SettingsBackupRestoreIcon style={{ color: '#fcfcfc' }} /> : <SettingsBackupRestoreIcon style={{ color: '#0066FF' }} />}\n   </div>\n   <div className=\"home__current\">\n    {cities.map((x) =>\n     <CityWeather\n      city={x.city}\n      temp={x.temp}\n      text={x.text}\n      deleteCity={deleteCity}\n     />)}\n   </div>\n   <Signature />\n\n  </div>\n )\n}\n\nexport default Home\n","import React from 'react';\nimport '../styles/App.css';\nimport Home from './Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}